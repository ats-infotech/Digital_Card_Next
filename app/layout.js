'use client'
import Footer from '@/components/Footer/Footer';
import '../assets/fonts/PoorStory/PoorStorystylesheet.css';
import '../assets/fonts/Poppins/Poppinstylesheet.css';
import "./globals.css";
import { Box } from '@mui/material';
import { FooterList } from '@/components/Footer/FooterList';
import { useCallback, useEffect, useState } from 'react';
import SvgDefs from '@/assets/icons/icons';
import { RainafashionFooterList } from '@/pages/Rainafashion/Footer/Footer';
import { redirect } from 'next/navigation';
import { ATSFooterList } from '@/pages/ATS/Footer/Footer'
import { SunilDiamondFooterList } from '@/pages/SunilDiamond/Footer/Footer';
import { useRouteChange } from '@/pages/Hook/useRouteChange';
import Loader from '@/common/Loader';

const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  const loading = useRouteChange()
  const [footerList, setFooterList] = useState(null);
  const [anchorTarget, setAnchorTarget] = useState(null);
  const [color, setColor] = useState({ color: 'footergrey', active: 'orange' });
  const [path, setPath] = useState('home-section')
  const pathName = window.location.pathname
  const isAdminDashboard = pathName.includes('admin');

  useEffect(() => {
    const handleHashChange = () => {
      const hash = window.location.hash.slice(1);
      setAnchorTarget(document.getElementById(hash));
    };

    handleHashChange();
    window.addEventListener('hashchange', handleHashChange);

    return () => {
      window.removeEventListener('hashchange', handleHashChange);
    };
  }, []);

  useEffect(() => {
    if (anchorTarget) {
      anchorTarget.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'center' });
    }
  }, [anchorTarget]);

  const handleClick = event => {
    event.preventDefault();
    const targetId = event.currentTarget.getAttribute('href').slice(1);
    const pathname = window.location.pathname
    const slicename = pathname.slice(0)

    setPath(targetId)
    if (document.getElementById(targetId)) {
      setAnchorTarget(document.getElementById(targetId));
      window.location.hash = targetId;
    } else {
      // router.back()
    }
    redirect(`${slicename}#${targetId}`)
  };

  const handleFooterList = useCallback(() => {
    const pathSegment = pathName.split('/')[1]?.toLowerCase();
    let newColor;
    let newFooterList;

    switch (pathSegment) {
      case 'atssoftwaresolution':
      case 'atssoftwaresolution-service':
        newColor = { color: 'footergrey', active: 'orange' };
        newFooterList = ATSFooterList;
        break;
      case 'rainafashion':
      case 'rainafashion-product-list':
      case 'rainafashion-productdetails':
        newColor = { color: 'footergrey', active: 'purpledark' };
        newFooterList = RainafashionFooterList;
        break;
      case 'sunildiamond':
      case 'sunildiamond-productlist':
        newColor = { color: 'footergrey', active: 'yellowmild' }
        newFooterList = SunilDiamondFooterList;
        break;
      default:
        newColor = { color: 'footergrey', active: 'orange' };
        newFooterList = null;
        break;
    }
    setColor(newColor);
    setFooterList(newFooterList);
  }, [pathName]);

  useEffect(() => {
    handleFooterList();
  }, [handleFooterList]);

  return (
    <html lang="en">
      <body>
        {
          loading && <Loader />
        }
        <SvgDefs />
        {!isAdminDashboard ? (
          <Box className='MainView'>
            {children}
          </Box>
        ) : (
          children
        )}
        {FooterList && <Footer handleClick={handleClick} path={path} FooterList={footerList} color={color?.color} activeColor={color?.active} />}
      </body>
    </html>
  );
}
